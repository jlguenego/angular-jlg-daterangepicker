{"version":3,"sources":["angular-jlg-daterangepicker.js"],"names":["app","angular","module","directive","$injector","restrict","require","link","scope","element","attr","ngModel","type","$parse","get","addEvent","on","event","removeEvent","off","$watch","options","daterangepicker","plugin","data","export","newValue","oldValue"],"mappings":"CAAA,WACC,YAEA,IAAIA,GAAMC,QAAQC,OAAO,yBAEzBF,GAAIG,UAAU,SAAU,YAAa,SAASC,GAC7C,OACCC,SAAU,IACVC,QAAS,UACTC,KAAM,SAAUC,EAAOC,EAASC,EAAMC,GACrC,GAAkB,oBAAdD,EAAKE,KAAT,CAIA,GAAIC,GAAST,EAAUU,IAAI,UAEvBC,EAAW,SAASC,GACvB,IAAK,GAAIC,KAASD,GACjBP,EAAQO,GAAGC,EAAOD,EAAGC,GAAO,KAI1BC,EAAc,SAASF,GAC1B,IAAK,GAAIC,KAASD,GACjBP,EAAQU,IAAIF,GAIdT,GAAMY,OAAOV,EAAKW,QAAS,WAC1B,GAAIA,GAAUR,EAAOH,EAAKW,SAASb,EACnCC,GAAQa,gBAAgBD,EACxB,IAAIE,GAASd,EAAQe,KAAK,kBACtBd,GAAKe,SACRjB,EAAME,EAAKe,QAAUF,EAEtB,IAAIP,GAAKH,EAAOH,EAAKM,IAAIR,EACzBO,GAASC,KAEP,GAEHR,EAAMY,OAAOV,EAAKM,GAAI,SAASU,EAAUC,GACxCT,EAAYS,GACZZ,EAASW,KACP","file":"angular-jlg-daterangepicker.min.js","sourcesContent":["(function() {\r\n\t'use strict';\r\n\t\r\n\tvar app = angular.module('jlg-daterangepicker', []);\r\n\t\r\n\tapp.directive('input', ['$injector', function($injector) {\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\trequire: 'ngModel',\r\n\t\t\tlink: function (scope, element, attr, ngModel) {\r\n\t\t\t\tif (attr.type !== 'daterangepicker') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar $parse = $injector.get('$parse');\r\n\t\t\t\t\r\n\t\t\t\tvar addEvent = function(on) {\r\n\t\t\t\t\tfor (var event in on) {\r\n\t\t\t\t\t\telement.on(event, on[event][0]);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tvar removeEvent = function(on) {\r\n\t\t\t\t\tfor (var event in on) {\r\n\t\t\t\t\t\telement.off(event);\r\n\t\t\t\t\t}\t\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tscope.$watch(attr.options, function() {\r\n\t\t\t\t\tvar options = $parse(attr.options)(scope);\r\n\t\t\t\t\telement.daterangepicker(options);\r\n\t\t\t\t\tvar plugin = element.data('daterangepicker');\r\n\t\t\t\t\tif (attr.export) {\r\n\t\t\t\t\t\tscope[attr.export] = plugin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar on = $parse(attr.on)(scope);\r\n\t\t\t\t\taddEvent(on);\r\n\t\t\t\t\t\r\n\t\t\t\t}, true);\r\n\t\t\t\t\r\n\t\t\t\tscope.$watch(attr.on, function(newValue, oldValue) {\r\n\t\t\t\t\tremoveEvent(oldValue);\r\n\t\t\t\t\taddEvent(newValue);\r\n\t\t\t\t}, true);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t};\r\n\t}]);\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}